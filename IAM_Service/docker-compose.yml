version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    command:
      - "--api.insecure=true"  # Enable Traefik dashboard
      - "--providers.docker=true"  # Enable Docker provider
      - "--entrypoints.web.address=:80"  # Define HTTP entrypoint
      - "--entrypoints.websecure.address=:443"  # Define HTTPS entrypoint
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"  # Enable TLS challenge for Let's Encrypt
      - "--certificatesresolvers.myresolver.acme.email=esaminu.py@gmail.com"  # Email for Let's Encrypt notifications
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"  # Storage for certificates
    ports:
      - "80:80"  # Expose HTTP port
      - "443:443"  # Expose HTTPS port
      - "8080:8080"  # Expose Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"  # Docker socket for service discovery
      - "./letsencrypt:/letsencrypt"  # Volume for certificates storage
    networks:
      - my-network

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - my-network
    restart: unless-stopped
    expose:
      - 5432

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - my-network
    restart: unless-stopped

  redis:
    image: redis
    container_name: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - ./data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - my-network
    restart: unless-stopped

  iam:
    build:
      context: ./
      dockerfile: ./Dockerfile

    container_name: iam_service
    networks:
      - my-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.iam.rule=Host(`iam.localhost`)"
      - "traefik.http.services.iam.loadbalancer.server.port=80"
    restart: unless-stopped

    depends_on:
      - postgres
      - redis
      - traefik


networks:
  my-network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
#  letsencrypt:
